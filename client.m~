cfunction client(port)
%   provides a menu for accessing PIC32 motor control functions
%
%   client(port)
%
%   Input Arguments:
%       port - the name of the com port.  This should be the same as what
%               you use in screen or putty in quotes ' '
%
%   Example:
%       client('/dev/ttyUSB0') (Linux/Mac)
%       client('COM3') (PC)
%
%   For convenience, you may want to change this so that the port is hardcoded.
   
% Opening COM connection
if ~isempty(instrfind)
    fclose(instrfind);
    delete(instrfind);
end

fprintf('Opening port %s....\n',port);

% settings for opening the serial port. baud rate 230400, hardware flow control
% wait up to 120 seconds for data before timing out
mySerial = serial(port, 'BaudRate', 230400, 'FlowControl', 'hardware','Timeout',5); 
% opens serial connection
fopen(mySerial);
% closes serial port when function exits
clean = onCleanup(@()fclose(mySerial));                                 

has_quit = false;
% menu loop
while ~has_quit
    fprintf('PIC32 MOTOR DRIVER INTERFACE\n\n');
    % display the menu options; this list will grow
    fprintf('     a: Read current sensor(ADC counts)   b: Read Current Sensor(mA)\n');
    fprintf('     c: Read encoder(counts)              d: Read encoder(deg)\n');
    fprintf('     e: Reset encoder                     f: Set PWM(-100 to 100)\n');
    fprintf('     g: Set current gains                 h: Get current gains\n');
    fprintf('     i: Set position gains                j: Get position gains\n');
    fprintf('     k: Test current control              l: Go to angle(deg) \n');
    fprintf('     m: Read encoder(counts)   n: Reset Encoder \n');
    fprintf('     o: Read encoder(counts)   p: Reset Encoder \n');
    fprintf('     q: Read encoder(counts)   r: Reset Encoder \n');
    % read the user's choice
    selection = input('\nENTER COMMAND: ', 's');
     
    % send the command to the PIC32
    fprintf(mySerial,'%c\n',selection);
    
    % take the appropriate action
    switch selection
        case 'c'                         % example operation
            n = fscanf(mySerial,'%d');   % get the incremented number back
            fprintf('The motor angle is: %d counts\n\n',n);     % print it to the screen
        case 'd'                         % example operation
            n = fscanf(mySerial,'%f');   % get the incremented number back
            fprintf('The motor angle is: %.2f degrees\n\n',n);     % print it to the screen
        case 'e'
            fprintf('Motor position is now at zero position.\n\n');
        case 'k'
            fprintf('Motor position is now at zero position.\n\n');
        case 'q'
            has_quit = true;             % exit client
        otherwise
            fprintf('Invalid Selection %c\n', selection);
    end
end

end
